{
	// Place your snippets for python here. Each snippet is defined under a snippet name and has a prefix, body and
	// description. The prefix is what is used to trigger the snippet and the body will be expanded and inserted. Possible variables are:
	// $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. Placeholders with the
	// same ids are connected.
	// Example:
	// "Print to console": {
	// 	"prefix": "log",
	// 	"body": [
	// 		"console.log('$1');",
	// 		"$2"
	// 	],
	// 	"description": "Log output to console"
	// }
	"Define Function df": {
		"prefix": "df",
		"body": [
			"def ${1:NAME}(${2:VAR}):",
			"\t\"\"\"DOC\"\"\"",
			"\t${3:pass}"
		],
		"description": "Function definition"
	},
	"Define Function Return Type dfr": {
		"prefix": "dfr",
		"body": [
			"def ${1:NAME}(${2:VAR}) -> ${3:RTN}:",
			"\t\"\"\"DOC\"\"\"",
			"\t${5:pass}"
		],
		"description": "Function definition with return type"
	},
	"Format Print prf": {
		"prefix": "prf",
		"body": "print(f\"{${1:VAR}}\")",
		"description": "Format printing"
	},
	"Basic Print prp": {
		"prefix": "prp",
		"body": "print(${1:DATA})",
		"description": "Printing"
	},
	"Print List Comp plc": {
		"prefix": "plc",
		"body": "[print(${1:VAR}) for ${1:VAR} in ${2:VARS}]",
		"description": "Print list comprehension"
	},
	"if else ife": {
		"prefix": "ife",
		"body": [
			"if ${1:VAR} ${2:COND} ${3:VAR}:",
			"\t${4:CODE}",
			"else:",
			"\t${5:CODE}"
		],
		"description": "if else"
	},
	"While wh": {
		"prefix": "wh",
		"body": [
			"while ${1:CODE}:",
			"\t${2:DO}"
		],
		"description": "While Loop"
	},
	"While True wht": {
		"prefix": "wht",
		"body": [
			"while True:",
			"\t${2:CODE}"
		],
		"description": "While True Loop"
	},
	"Test Snip tst": {
		"prefix": "tst",
		"body": [
			"for _ in range(${1:VAR}):",
			"\tprint(${1:VAR})"
		],
		"description": "Test"
	},
	"if main ifmain": {
		"prefix": "ifmain",
		"body": [
			"def main():",
			"\tpass",
			"\n",
			"if __name__ == \"__main__\":",
			"\timport os",
			"\timport sys",
			"",
			"\tos.system(\"clear\")",
			"\tsys.exit(main())"
		]
	}
}
