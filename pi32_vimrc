"          _
"  __   __(_) _ __ ___   _ __  ___
"  \ \ / /| || '_ ` _ \ | '__|/ __|
"  _\ V / | || | | | | || |  | (__
" (_)\_/  |_||_| |_| |_||_|   \___|
"

"" Table (Search for [nn])
"" settings [sx]
"" vim plug [px]
"" mappings [mx]
"" groups [gx]

"" settings sx (((
filetype plugin indent on
syntax on
set guicursor=""
set background=dark
colorscheme retrobox

set expandtab
set nowrap

set autoindent
set copyindent
set smartindent

set autochdir
set autoread
set hidden

set cursorline
set cursorlineopt=number

set ignorecase
set smartcase
set incsearch
set nohlsearch

set number
set relativenumber

set foldmarker=(((,)))
set signcolumn=yes
set laststatus=2
set noruler
set statusline=
set statusline=(%n)\ %F\ %h%m%r%w\ [%Y]\ %q%=%-14.(col:\ %c\ [%l:%L]%)\ (%b\ 0x%B)\ (%o\ -\ 0x%O)\ %a\ %p%%\ %P\ %t\ |
set modeline

set showmatch
set showcmd
set showmode
set scrolloff=5
set sidescrolloff=8
set path+=**

set updatetime=250
set completeopt=menuone,popup
set wildmode=list:longest,full

set noundofile
set noswapfile
set backupdir=~/.vim/backup
set writebackup
set backup

let mapleader=" "
let maplocalleader="\\"
" )))

"" vim plug (((
call plug#begin()
Plug 'morhetz/gruvbox'
Plug 'mattn/emmet-vim'
Plug 'mbbill/undotree'
call plug#end()

let g:user_emmet_mode='inv'
let g:user_emmet_leader_key=','
"" )))

"" mappings mx (((
inoremap kj <ESC>
vnoremap kj <ESC>

nnoremap <leader>ut :UndotreeToggle<cr><C-w>h<C-w>l

nnoremap <silent> <leader>w :write<cr>
nnoremap <silent> <leader>q ZQ
nnoremap <silent> <leader>z ZZ
nnoremap <silent> <leader>o :edit .<CR>
nnoremap <silent> <localleader>e :edit $MYVIMRC<cr>
nnoremap <silent> <localleader>ve :vsplit<cr><C-w>l:edit $MYVIMRC<cr>
nnoremap <localleader>s :write<cr>:source $MYVIMRC<cr>
" nnoremap <leader>t :write<CR>:shell<CR>
nnoremap <localleader>t :write<CR>:terminal<CR>

nnoremap <C-f> <C-d>
nnoremap <silent> <leader>bn :bnext<cr>
nnoremap <silent> <leader>bp :bprevious<cr>
nnoremap w W
nnoremap ,a zt
nnoremap ,b zb
nnoremap ,z zz
nnoremap <S-b> _
nnoremap <S-e> $
nnoremap <S-y> y$
nnoremap n nzz
nnoremap N Nzz
nnoremap ' `
nnoremap '' ``
nnoremap <F8> @
nnoremap <F9> @@
vnoremap J :m '>+1<CR>gv=gv
vnoremap K :m '<-2<CR>gv=gv
vnoremap < <gv
vnoremap > >gv
nnoremap <leader>* :%s/\<<C-r><C-w>\>//gI<left><left><left>
nnoremap <leader>& :%s/\<<C-r><C-w>\>//gIc<left><left><left><left>
nnoremap <leader>L :s/\<<C-r><C-w>\>//gI<left><left><left>

nnoremap <leader>tn :tabnew<CR>
nnoremap <leader>nt :tabnext<CR>
nnoremap <leader>pt :tabprevious<CR>

nnoremap <silent> <leader>v :vsplit<cr><C-w>l
nnoremap <silent> <leader>s :split<cr><C-w>j
nnoremap <silent> <C-h> <C-w>h
nnoremap <silent> <C-j> <C-w>j
nnoremap <silent> <C-k> <C-w>k
nnoremap <silent> <C-l> <C-w>l
nnoremap <leader>hh :vertical resize+1<CR>
nnoremap <leader>ll :vertical resize-1<CR>
nnoremap <leader>jj :resize+1<CR>
nnoremap <leader>kk :resize-1<CR>
nnoremap <leader>rs <C-w>= " )))

"" groups gx (((
augroup ALL " (((
  au!
  au BufWritepre $MYVIMRC,*.vim,*.c,*.h,*.html,*.css,*.cpp,*.py :normal! mpHmogg=G'ozt`p
  au BufWritePre,VimLeave * :normal! mp
  au BufWritePre * %s/\s\+$//e
  au BufWritePost,VimEnter * :normal! `p
  au BufEnter * iabbrev teh the
  au BufEnter * iabbrev tow two
  au InsertEnter * silent set nornu
  au InsertLeave * silent set rnu
augroup END " )))

augroup VIM
  au!
  au! FileType vim setlocal ts=2 sw=2 sts=2 tw=0
augroup END

augroup PYTHON
  au!
  au! FileType python setlocal ts=4 sw=4 sts=4 tw=0
augroup END

augroup C
  au!
  au! FileType c setlocal ts=4 sw=4 sts=4 tw=0 noai cin
  au! BufEnter *.c,*.h nnoremap <buffer> <leader>b 0A {<cr>}<esc>ko
augroup END

augroup BASH
  au!
  au! FileType sh setlocal ts=4 sw=4 sts=4 tw=0
augroup END
" )))
