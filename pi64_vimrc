"# VIMRC: Sourced from ~/.vimrc

function Indent()
  let l:view = winsaveview()
  :normal! gg=G
  call winrestview(l:view)
endfunction

function TrimWhitespace()
  let l:view = winsaveview()
  %s/\s\+$//e
  call winrestview(l:view)
endfunction

set nocompatible
filetype indent plugin on
syntax enable
set background=dark
set t_Co=256
colorscheme retrobox

if $TERM == "linux"
  set t_Co=16
  colorscheme retrobox
endif

set autochdir
set autoindent
set autoread
set autowriteall
set backspace=indent,eol,start
set colorcolumn=80
set completeopt=menuone,preview,popup
set nocopyindent
set cursorline
set cursorlineopt=both
set nodigraph
set expandtab
set foldcolumn=1
set foldlevel=99
set foldlevelstart=99
set foldmethod=expr
set guicursor=""
set hidden
set ignorecase
set incsearch
set lazyredraw
set number
set path+=**
set relativenumber
set noruler
set laststatus=2
set statusline=(%n)\ %F\ %h%m%r\ [%Y]\ col:\ %c%=%b\ 0x%B\ [%c%V,%l]\ %p%%\ %P\ %f
" set statusline=%<%f\ %h%m%r%=%-14.(%l,%c%V%)\ %P
" set statusline=%<%f%h%m%r%=%b\ 0x%B\ \ %l,%c%V\ %P

" set statusline=%<%f%=\ [%1*%M%*%n%R%H]\ %-19(%3l,%02c%03V%)%O'%02b'
" hi User1 term=inverse,bold cterm=inverse,bold ctermfg=red

set scrolloff=5
set shiftwidth=4
set showmatch
set smartcase
set smartindent
set smarttab
set softtabstop=4
set noswapfile
set tabstop=4
set wildmenu
set wildmode=list:longest,full
set nowrap

let mapleader=" "
let maplocalleader="\\"

call plug#begin()
Plug 'honza/vim-snippets'
Plug 'SirVer/ultisnips'
call plug#end()

let g:UltiSnipsExpandTrigger="<tab>"
let g:UltiSnipsJumpForwardTrigger="<tab>"
let g:UltiSnipsJumpBackwardTrigger="<S-tab>"

inoremap kj <esc>
vnoremap kj <ESC>

nnoremap <silent> <leader>w :write<cr>
nnoremap <silent> <leader>q ZQ
nnoremap <silent> <leader>z ZZ
nnoremap <silent> <leader>o :edit .<cr>
nnoremap <silent> <localleader>e :edit ~/.vimrc<cr>
nnoremap <silent> <localleader>s :source ~/.vimrc<cr>
nnoremap <leader>t :shell<CR>

nnoremap <silent> <leader>bn :bnext<cr>
nnoremap <silent> <leader>bp :bprevious<cr>
nnoremap w W
nnoremap <leader>a zt
nnoremap <S-b> _
nnoremap <S-e> $
nnoremap <S-y> y$
nnoremap n nzz
nnoremap N Nzz
nnoremap ' `
nnoremap '' ``
nnoremap <F8> @
nnoremap <F9> @@
vnoremap J :m '>+1<CR>gv=gv
vnoremap K :m '<-2<CR>gv=gv
vnoremap < <gv
vnoremap > >gv
nnoremap <leader>* :%s/\<<C-r><C-w>\>//gI<left><left><left>
nnoremap <leader>& :%s/\<<C-r><C-w>\>//gIc<left><left><left><left>

nnoremap <leader>to :tabnew<CR>
nnoremap <leader>tn :tabnext<CR>
nnoremap <leader>tp :tabprevious<CR>
nnoremap <leader>tc :tabclose<CR>

nnoremap <leader>v :vsplit<cr><C-w>l
nnoremap <leader>s :split<cr><C-w>j
nnoremap <M-l> <C-w>l
nnoremap <M-h> <C-w>h
nnoremap <M-j> <C-w>j
nnoremap <M-k> <C-w>k

nnoremap <leader>hh :vertical resize+5<CR>
nnoremap <leader>ll :vertical resize-5<CR>
nnoremap <leader>jj :resize+5<CR>
nnoremap <leader>kk :resize-5<CR>
nnoremap <leader>rs <C-w>=

augroup ALL
  au!
  au InsertEnter * set nornu
  au InsertLeave * set rnu
  au BufWritePre * call TrimWhitespace()
  au BufReadPost * if line("'\"") > 1 && line("'\"") <= line("$") | exe "normal! g'\"" | endif
augroup END

augroup COMMON
  au!
  au BufEnter,BufWritePre $MYVIMRC,*.vim,*.py,*.sh,*.html,*.css,*.c,*.cpp,*.h,*.rs call Indent()
augroup END

augroup VIM
  au!
  au FileType vim setlocal ts=2 sw=2 sts=2
augroup END

augroup PYTHON
  au!
  au FileType python setlocal fdm=indent fdc=3
  au BufEnter *.py nnoremap <buffer> <F5> :write<cr>:!python3 %<cr>
  au BufEnter *.py nnoremap <buffer> <F6> :!black %<CR>
  au BufEnter *.py nnoremap <buffer> <F7> :!pylint --rcfile ~/python/pylint.toml %<cr>
  au BufEnter *.py :onoremap <buffer> ib :<c-u>normal! f[vi[<cr>
  au BufLeave *.py umap ib
augroup END

augroup SH
  au!
  au FileType sh setlocal nofen fdc=0
  au BufEnter *.sh nnoremap <buffer> <F5> :write<cr>:!./%<cr>
augroup END

augroup HTML_CSS
  au!
  au FileType html,css setlocal ts=2 sw=2 sts=2 cc=80,100,120 fdc=4 fdm=manual fdl=2 fdls=2 aw awa updatetime=2500
  au BufEnter *.html nnoremap <buffer> <localleader>f Vatzf
  au BufRead,BufEnter *.html nnoremap <buffer> <localleader>c i<!----><esc>2hi<space><esc>i<space>
  au BufRead,BufEnter *.css nnoremap <buffer> <localleader>c i/**/<esc>hi<space><esc>i<space>
  au BufRead,BufEnter *.html :onoremap <buffer> it :<c-u>normal! f<vi<<cr>
  au CursorHold *.html,*.css write
augroup END

augroup C_CPP
  au!
  au FileType c,cpp setlocal noai nosi noci cin cino=ln,c2 fdc=3 fdm=indent fdl=3 fdls=1
  au FileType c,cpp nnoremap <buffer> <leader>bb o{<cr>}<esc>ko
  au FileType c nnoremap <buffer> <F5> :!./main<CR>
  au Filetype c nnoremap <buffer> <leader>mm :!make main<CR>
augroup END

augroup RUST
  au!
  au FileType rust setlocal noai nosi noci cin cino=ln,c2 fdc=3 fdm=indent
  au FileType rust nnoremap <buffer> <leader>bb A<space>{<cr>}<esc>ko
augroup END

augroup TEXT
  au!
  au FileType text setlocal ts=8 sw=4 sts=8 tw=79 noet wrap fdc=1
  au BufEnter *.txt nnoremap <leader>x :<c-u>execute "normal! GoHELLO\<lt>esc>"<cr>
augroup END

augroup GITCOMMIT
  au!
  au FileType gitcommit setlocal ts=2 sw=2 sts=2 tw=70 wrap cc=50
  au FileType gitcommit :normal! gg0
augroup END
